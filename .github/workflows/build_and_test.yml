name: Build and Test

on:
  push:
    branches:
      - 'main'
      - 'staging'
  pull_request:
    branches:
      - '*'

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os:
          - macos-latest
          - ubuntu-latest
        ocaml-compiler:
          - 4.13.1

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Use OCaml ${{ matrix.ocaml-compiler }}
        uses: ocaml/setup-ocaml@v2
        with:
          ocaml-compiler: ${{ matrix.ocaml-compiler }}
          dune-cache: true
          cache-prefix: v1-${{ matrix.os }}

      - name: Install OCaml deps (Ubuntu)
        run: opam install . --deps-only --with-doc --with-test
        if: matrix.os == 'ubuntu-latest'

      - name: Install OCaml deps (MacOS)
        run: opam install . --jobs 1 --deps-only --with-doc --with-test
        if: matrix.os == 'macos-latest'

      - name: Build (Ubuntu)
        run: opam exec -- make build_release
        if: matrix.os == 'ubuntu-latest'

      - name: Build (MacOS)
        run: opam exec -- make build_release_mac
        if: matrix.os == 'macos-latest'

      - name: Install (Ubuntu)
        run: opam exec -- make install
        if: matrix.os == 'ubuntu-latest'

      - name: Install (MacOS)
        run: opam exec -- make install_mac
        if: matrix.os == 'macos-latest'

      - name: Test (Ubuntu)
        run: opam exec -- make test
        if: matrix.os == 'ubuntu-latest'

      - name: Test (MacOS)
        run: opam exec -- make test_mac
        if: matrix.os == 'macos-latest'

      - run: opam exec -- make send_coverage
        if: matrix.ocaml-compiler == '4.12.0'
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload the build artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.os }}-${{ matrix.ocaml-compiler }}-hfsp
          path: _build/install/default/bin/hfsp
